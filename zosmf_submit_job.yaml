###############################################################################
# Â© Copyright IBM Corporation 2021
###############################################################################

###############################################################################
# This sample playbook demonstrates basic use cases for invoking a REST API
# service, particularly the z/OSMF REST API services.
#
# Usage:
#  ansible-playbook -i <inventory> <playbook>
#
# Example:
#  ansible-playbook -i inventories uri-sample.yml
#
###############################################################################
---
- name: perform various operations with z/OSMF 
  hosts: zxplore
  collections:
    - ibm.ibm_zosmf
    - ibm.ibm_zos_core
  gather_facts: false
  environment:
    "{{ environment_vars }}"

  vars:
    # Version of z/OSMF used to make REST calls
    ZOSMF_VERSION: "1.0"

    # ***************************************************
    #   Variables for invoking z/OSMF REST API services
    # ***************************************************

    # z/OSMF host and port information
    ZOSMF_HOST: 204.90.115.200
    ZOSMF_PORT: 10443

    # Desired destination folder on target host for holding definition file
    ZOSMF_DEST_FOLDER: /z/z04683

    # Credentials to access z/OSMF
    ZOSMF_USER: Z04683
    ZOSMF_PASS: daniele9


  tasks:
    - name: Set String
      set_fact:
        string: |
          //HELLO   JOB (T043JM,JM00,1,0,0,0),'HELLO WORLD - JRM',
          //             MSGCLASS=X,MSGLEVEL=1,NOTIFY=&SYSUID
          /*JOBPARM LINES=9999
          //*
          //* PRINT "HELLO WORLD" ON JOB OUTPUT
          //*
          //* NOTE THAT THE EXCLAMATION POINT IS INVALID EBCDIC FOR JCL
          //*   AND WILL CAUSE A JCL ERROR
          //*
          //STEP0001 EXEC PGM=IEBGENER
          //SYSIN    DD DUMMY
          //SYSPRINT DD SYSOUT=*
          //SYSUT1   DD *
            HELLO, philippe
          /*
          //SYSUT2   DD SYSOUT=*
          //
      register: output

    - name : Create a File
      copy:
        content: "{{string}}"
#        dest: "HELLO.jcl"
        dest: "{{ playbook_dir }}/HELLO.jcl"        
      delegate_to: localhost
    - name: Convert file encoding from controller file to USS
      zos_copy:
        src: "{{ playbook_dir }}/HELLO.jcl"   
        dest: "{{ZOSMF_DEST_FOLDER}}/hello.jcl"
        force: true
        encoding:
          from: ISO8859-1
          to: IBM-1047
    - name: Create and submit a job
      uri:
        url: https://{{ ZOSMF_HOST }}:{{ ZOSMF_PORT }}/zosmf/restjobs/jobs/
        user: "{{ ZOSMF_USER }}"
        password: "{{ ZOSMF_PASS }}"
        method: PUT
        body_format: json
        body: 
#          file: "{{lookup('file', 'HELLO.jcl') }}" 
          file: "{{ZOSMF_DEST_FOLDER}}/hello.jcl" 
#          file: "{{lookup('file', '{{playbook_dir}}/HELLO.jcl') }}"  
#          file: //'Z04683.JCL(LISTDS)'
        headers:
          Content-Type: application/json
          X-CSRF-ZOSMF-HEADER: required_header
        force_basic_auth: true
        validate_certs: false
        status_code: 201
        return_content: true
      register: zosmf_result

    - name: Response dslist {{ ZOSMF_HLQ }} 
      ansible.builtin.debug:
        msg: "{{ zosmf_result }}"
